1. Tampilkan seluruh data dari tabel "employees" (5 Points)
    SELECT * 
    FROM employees

2. Berapa banyak karyawan yang memiliki posisi pekerjaan (job title) "Manager"? (5 Points)
    SELECT COUNT(employee_id) 
    FROM employees 
    WHERE job_title = 'Manager'

3. Tampilkan daftar nama dan gaji (salary) dari karyawan yang bekerja di departemen "Sales" atau "Marketing" (10 Points)
    SELECT name, salary 
    FROM employees 
    WHERE department = 'Sales' OR department = 'Marketing'

4. Hitung rata-rata gaji (salary) dari karyawan yang bergabung (joined) dalam 5 tahun terakhir (berdasarkan kolom "joined_date") (10 Points)
    SELECT AVG(salary) 
    FROM employees 
    WHERE joined_date >= CURRENT_DATE - INTERVAL '5' YEAR AND joined_date < CURRENT_DATE;

5. Tampilkan 5 karyawan dengan total penjualan (sales) tertinggi dari tabel "employees" dan "sales_data" (10 Points)
    SELECT emp.name, SUM(sales) AS sales 
    FROM employees AS emp
    JOIN sales_data AS sal ON emp.employee_id = sal.employee_id
    ORDER BY sales DESC LIMIT 5
    GROUP BY emp.employee_id 

6. Tampilkan nama, gaji (salary), dan rata-rata gaji (salary) dari semua karyawan yang bekerja di departemen yang memiliki rata-rata gaji lebih tinggi dari gaji rata-rata di semua departemen (15 Points)
    SELECT NAME, salary, department
    FROM employees
    WHERE salary > ALL ( SELECT AVG(salary) FROM employees GROUP BY department);

7. Tampilkan nama dan total penjualan (sales) dari setiap karyawan, bersama dengan peringkat (ranking) masing-masing karyawan berdasarkan total penjualan. Peringkat 1 adalah karyawan dengan total penjualan tertinggi (25 Points)
    SELECT NAME, SUM(sales) AS total_sales
    FROM employees
    JOIN sales_data ON employees.employee_id = sales_data.employee_id
    ORDER BY total_sales DESC
    GROUP BY NAME

8. Buat sebuah stored procedure yang menerima nama departemen sebagai input, dan mengembalikan daftar karyawan dalam departemen tersebut bersama dengan total gaji (salary) yang mereka terima (20 Points)
    DELIMITER $$
    CREATE PROCEDURE memberDepartment
    (
        memberDpt VARCHAR(50)
    )
    BEGIN
        SELECT NAME, salary 
        FROM employees
        WHERE department = memberDpt;
    END$$
    DELIMITER ;
    CALL memberDepartment("Sales")